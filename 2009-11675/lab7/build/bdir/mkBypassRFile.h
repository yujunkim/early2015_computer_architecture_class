/*
 * Generated by Bluespec Compiler, version 2012.01.A (build 26572, 2012-01-17)
 * 
 * On Wed Jun  3 12:55:27 KST 2015
 * 
 */

/* Generation options: */
#ifndef __mkBypassRFile_h__
#define __mkBypassRFile_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"

namespace bluesim
{
  
  /* Class declaration for the mkBypassRFile module */
  class MOD_mkBypassRFile : public Module {
   
   /* Clock handles */
   private:
    tClock __clk_handle_0;
   
   /* Clock gate handles */
   public:
    tUInt8 *clk_gate[0];
   
   /* Instantiation parameters */
   public:
   
   /* Module state */
   public:
    MOD_Wire<tUInt64> INST_bypassE_data_dummy;
    MOD_Reg<tUInt8> INST_bypassE_data_dummy2;
    MOD_Reg<tUInt8> INST_bypassE_data_dummy2_1;
    MOD_Wire<tUInt64> INST_bypassE_data_dummy_1;
    MOD_Wire<tUInt64> INST_bypassE_data_dummy_2;
    MOD_Wire<tUInt64> INST_bypassE_data_dummy_3;
    MOD_Wire<tUInt64> INST_bypassE_data_lat;
    MOD_Wire<tUInt64> INST_bypassE_data_lat_1;
    MOD_Reg<tUInt64> INST_bypassE_data_rl;
    MOD_Wire<tUInt8> INST_bypassE_deqP_dummy;
    MOD_Reg<tUInt8> INST_bypassE_deqP_dummy2;
    MOD_Reg<tUInt8> INST_bypassE_deqP_dummy2_1;
    MOD_Wire<tUInt8> INST_bypassE_deqP_dummy_1;
    MOD_Wire<tUInt8> INST_bypassE_deqP_dummy_2;
    MOD_Wire<tUInt8> INST_bypassE_deqP_dummy_3;
    MOD_Wire<tUInt8> INST_bypassE_deqP_lat;
    MOD_Wire<tUInt8> INST_bypassE_deqP_lat_1;
    MOD_Reg<tUInt8> INST_bypassE_deqP_rl;
    MOD_Wire<tUInt8> INST_bypassE_enqP_dummy;
    MOD_Reg<tUInt8> INST_bypassE_enqP_dummy2;
    MOD_Reg<tUInt8> INST_bypassE_enqP_dummy2_1;
    MOD_Wire<tUInt8> INST_bypassE_enqP_dummy_1;
    MOD_Wire<tUInt8> INST_bypassE_enqP_dummy_2;
    MOD_Wire<tUInt8> INST_bypassE_enqP_dummy_3;
    MOD_Wire<tUInt8> INST_bypassE_enqP_lat;
    MOD_Wire<tUInt8> INST_bypassE_enqP_lat_1;
    MOD_Reg<tUInt8> INST_bypassE_enqP_rl;
    MOD_Wire<tUInt64> INST_bypassM_data_dummy;
    MOD_Reg<tUInt8> INST_bypassM_data_dummy2;
    MOD_Reg<tUInt8> INST_bypassM_data_dummy2_1;
    MOD_Wire<tUInt64> INST_bypassM_data_dummy_1;
    MOD_Wire<tUInt64> INST_bypassM_data_dummy_2;
    MOD_Wire<tUInt64> INST_bypassM_data_dummy_3;
    MOD_Wire<tUInt64> INST_bypassM_data_lat;
    MOD_Wire<tUInt64> INST_bypassM_data_lat_1;
    MOD_Reg<tUInt64> INST_bypassM_data_rl;
    MOD_Wire<tUInt8> INST_bypassM_deqP_dummy;
    MOD_Reg<tUInt8> INST_bypassM_deqP_dummy2;
    MOD_Reg<tUInt8> INST_bypassM_deqP_dummy2_1;
    MOD_Wire<tUInt8> INST_bypassM_deqP_dummy_1;
    MOD_Wire<tUInt8> INST_bypassM_deqP_dummy_2;
    MOD_Wire<tUInt8> INST_bypassM_deqP_dummy_3;
    MOD_Wire<tUInt8> INST_bypassM_deqP_lat;
    MOD_Wire<tUInt8> INST_bypassM_deqP_lat_1;
    MOD_Reg<tUInt8> INST_bypassM_deqP_rl;
    MOD_Wire<tUInt8> INST_bypassM_enqP_dummy;
    MOD_Reg<tUInt8> INST_bypassM_enqP_dummy2;
    MOD_Reg<tUInt8> INST_bypassM_enqP_dummy2_1;
    MOD_Wire<tUInt8> INST_bypassM_enqP_dummy_1;
    MOD_Wire<tUInt8> INST_bypassM_enqP_dummy_2;
    MOD_Wire<tUInt8> INST_bypassM_enqP_dummy_3;
    MOD_Wire<tUInt8> INST_bypassM_enqP_lat;
    MOD_Wire<tUInt8> INST_bypassM_enqP_lat_1;
    MOD_Reg<tUInt8> INST_bypassM_enqP_rl;
    MOD_ConfigReg<tUInt32> INST_rfile;
    MOD_ConfigReg<tUInt32> INST_rfile_1;
    MOD_ConfigReg<tUInt32> INST_rfile_2;
    MOD_ConfigReg<tUInt32> INST_rfile_3;
    MOD_ConfigReg<tUInt32> INST_rfile_4;
    MOD_ConfigReg<tUInt32> INST_rfile_5;
    MOD_ConfigReg<tUInt32> INST_rfile_6;
    MOD_ConfigReg<tUInt32> INST_rfile_7;
   
   /* Constructor */
   public:
    MOD_mkBypassRFile(char const *name, Module *parent);
   
   /* Symbol init methods */
   private:
    void init_symbols_0();
   
   /* Reset signal definitions */
   private:
    tUInt8 PORT_RST_N;
   
   /* Port definitions */
   public:
   
   /* Publicly accessible definitions */
   public:
    tUInt8 DEF_upd__h8018;
    tUInt8 DEF_upd__h11149;
    tUInt8 DEF_upd__h7554;
    tUInt8 DEF_upd__h10657;
    tUInt8 DEF_bypassM_deqP_dummy2_1__h8136;
    tUInt8 DEF_bypassM_deqP_dummy2__h8123;
    tUInt8 DEF_bypassM_enqP_dummy2_1__h7919;
    tUInt8 DEF_bypassM_enqP_dummy2__h11185;
    tUInt8 DEF_bypassE_deqP_dummy2_1__h7672;
    tUInt8 DEF_bypassE_deqP_dummy2__h7659;
    tUInt8 DEF_bypassE_enqP_dummy2_1__h7455;
    tUInt8 DEF_bypassE_enqP_dummy2__h10693;
    tUInt8 DEF_n__read__h11148;
    tUInt8 DEF_n__read__h10656;
    tUInt8 DEF_y__h8169;
    tUInt8 DEF_y__h7705;
   
   /* Local definitions */
   private:
    tUInt8 DEF_eDst__h8721;
    tUInt8 DEF_cnt1__h3926;
    tUInt8 DEF_cnt1__h7265;
    tUInt8 DEF_NOT_IF_IF_bypassE_enqP_dummy2_1_3_THEN_IF_bypa_ETC___d271;
    tUInt32 DEF_mData__h8724;
    tUInt64 DEF_ab__h5068;
    tUInt64 DEF_ab__h5064;
    tUInt64 DEF_ab__h1729;
    tUInt64 DEF_ab__h1725;
    tUInt32 DEF__read__h554;
    tUInt32 DEF__read__h520;
    tUInt32 DEF__read__h486;
    tUInt32 DEF__read__h452;
    tUInt32 DEF__read__h418;
    tUInt32 DEF__read__h384;
    tUInt32 DEF__read__h350;
    tUInt32 DEF__read__h316;
    tUInt8 DEF_upd__h7951;
    tUInt8 DEF_upd__h7487;
    tUInt8 DEF_bypassM_data_dummy2_1__h9203;
    tUInt8 DEF_bypassM_data_lat_whas____d275;
    tUInt8 DEF_bypassE_data_dummy2_1__h8933;
    tUInt8 DEF_bypassE_data_lat_whas____d274;
    tUInt32 DEF__read_snd__h5071;
    tUInt32 DEF_x_wget_snd__h5067;
    tUInt32 DEF_x_wget_snd__h1728;
    tUInt32 DEF__read_snd__h1732;
    tUInt8 DEF__read_fst__h5070;
    tUInt8 DEF_x_wget_fst__h5066;
    tUInt8 DEF_x_wget_fst__h1727;
    tUInt8 DEF__read_fst__h1731;
    tUInt32 DEF_eData__h8722;
    tUInt32 DEF_IF_bypassM_data_lat_whas__4_THEN_bypassM_data__ETC___d262;
    tUInt32 DEF_IF_bypassE_data_lat_whas_THEN_bypassE_data_lat_ETC___d258;
    tUInt8 DEF_IF_IF_bypassM_enqP_dummy2_1_7_THEN_IF_bypassM__ETC___d270;
    tUInt8 DEF_IF_IF_bypassE_enqP_dummy2_1_3_THEN_IF_bypassE__ETC___d269;
    tUInt8 DEF_mDst__h8723;
    tUInt8 DEF_IF_bypassM_data_lat_whas__4_THEN_bypassM_data__ETC___d261;
    tUInt8 DEF_IF_bypassE_data_lat_whas_THEN_bypassE_data_lat_ETC___d257;
    tUInt8 DEF_n__read__h7819;
    tUInt8 DEF_IF_bypassM_enqP_lat_whas__1_THEN_bypassM_enqP__ETC___d263;
    tUInt8 DEF_n__read__h7355;
    tUInt8 DEF_IF_bypassE_enqP_lat_whas__0_THEN_bypassE_enqP__ETC___d259;
    tUInt8 DEF_NOT_IF_IF_bypassM_enqP_dummy2_1_7_THEN_IF_bypa_ETC___d277;
    tUInt8 DEF_NOT_IF_IF_bypassE_enqP_dummy2_1_3_THEN_IF_bypa_ETC___d276;
   
   /* Rules */
   public:
    void RL_bypassE_data_canon();
    void RL_bypassE_enqP_canon();
    void RL_bypassE_deqP_canon();
    void RL_bypassM_data_canon();
    void RL_bypassM_enqP_canon();
    void RL_bypassM_deqP_canon();
    void RL_update();
   
   /* Methods */
   public:
    void METH_wrE(tUInt8 ARG_wrE_rindx, tUInt32 ARG_wrE_data);
    tUInt8 METH_RDY_wrE();
    void METH_wrM(tUInt8 ARG_wrM_rindx, tUInt32 ARG_wrM_data);
    tUInt8 METH_RDY_wrM();
    tUInt32 METH_rdA(tUInt8 ARG_rdA_rindx);
    tUInt8 METH_RDY_rdA();
    tUInt32 METH_rdB(tUInt8 ARG_rdB_rindx);
    tUInt8 METH_RDY_rdB();
   
   /* Reset routines */
   public:
    void reset_RST_N(tUInt8 ARG_rst_in);
   
   /* Static handles to reset routines */
   public:
   
   /* Pointers to reset fns in parent module for asserting output resets */
   private:
   
   /* Functions for the parent module to register its reset fns */
   public:
   
   /* Functions to set the elaborated clock id */
   public:
    void set_clk_0(char const *s);
   
   /* State dumping routine */
   public:
    void dump_state(unsigned int indent);
   
   /* VCD dumping routines */
   public:
    unsigned int dump_VCD_defs(unsigned int levels);
    void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkBypassRFile &backing);
    void vcd_defs(tVCDDumpType dt, MOD_mkBypassRFile &backing);
    void vcd_prims(tVCDDumpType dt, MOD_mkBypassRFile &backing);
  };
}

#endif /* ifndef __mkBypassRFile_h__ */
