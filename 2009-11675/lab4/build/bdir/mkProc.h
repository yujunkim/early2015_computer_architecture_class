/*
 * Generated by Bluespec Compiler, version 2012.01.A (build 26572, 2012-01-17)
 * 
 * On Thu Apr 23 21:38:41 KST 2015
 * 
 */

/* Generation options: */
#ifndef __mkProc_h__
#define __mkProc_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"
#include "mkCop.h"
#include "mkDMemory.h"
#include "mkIMemory.h"
#include "mkRFile.h"

namespace bluesim
{
  
  /* Class declaration for the mkProc module */
  class MOD_mkProc : public Module {
   
   /* Clock handles */
   private:
    tClock __clk_handle_0;
   
   /* Clock gate handles */
   public:
    tUInt8 *clk_gate[0];
   
   /* Instantiation parameters */
   public:
   
   /* Module state */
   public:
    MOD_Reg<tUInt8> INST_condFlag;
    MOD_mkCop INST_cop;
    MOD_mkDMemory INST_dMem;
    MOD_Reg<tUWide> INST_e2mw;
    MOD_Reg<tUInt64> INST_f2e;
    MOD_mkIMemory INST_iMem;
    MOD_Reg<tUInt32> INST_pc;
    MOD_mkRFile INST_rf;
    MOD_Reg<tUInt8> INST_stage;
    MOD_Reg<tUInt8> INST_stat;
    MOD_Wire<tUInt8> INST_statRedirect_data_dummy;
    MOD_Reg<tUInt8> INST_statRedirect_data_dummy2;
    MOD_Reg<tUInt8> INST_statRedirect_data_dummy2_1;
    MOD_Wire<tUInt8> INST_statRedirect_data_dummy_1;
    MOD_Wire<tUInt8> INST_statRedirect_data_dummy_2;
    MOD_Wire<tUInt8> INST_statRedirect_data_dummy_3;
    MOD_Wire<tUInt8> INST_statRedirect_data_lat;
    MOD_Wire<tUInt8> INST_statRedirect_data_lat_1;
    MOD_Reg<tUInt8> INST_statRedirect_data_rl;
    MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy;
    MOD_Reg<tUInt8> INST_statRedirect_deqP_dummy2;
    MOD_Reg<tUInt8> INST_statRedirect_deqP_dummy2_1;
    MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_1;
    MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_2;
    MOD_Wire<tUInt8> INST_statRedirect_deqP_dummy_3;
    MOD_Wire<tUInt8> INST_statRedirect_deqP_lat;
    MOD_Wire<tUInt8> INST_statRedirect_deqP_lat_1;
    MOD_Reg<tUInt8> INST_statRedirect_deqP_rl;
    MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy;
    MOD_Reg<tUInt8> INST_statRedirect_enqP_dummy2;
    MOD_Reg<tUInt8> INST_statRedirect_enqP_dummy2_1;
    MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_1;
    MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_2;
    MOD_Wire<tUInt8> INST_statRedirect_enqP_dummy_3;
    MOD_Wire<tUInt8> INST_statRedirect_enqP_lat;
    MOD_Wire<tUInt8> INST_statRedirect_enqP_lat_1;
    MOD_Reg<tUInt8> INST_statRedirect_enqP_rl;
   
   /* Constructor */
   public:
    MOD_mkProc(char const *name, Module *parent);
   
   /* Symbol init methods */
   private:
    void init_symbols_0();
   
   /* Reset signal definitions */
   private:
    tUInt8 PORT_RST_N;
   
   /* Port definitions */
   public:
    tUWide PORT_cpuToHost;
   
   /* Publicly accessible definitions */
   public:
    tUInt8 DEF_cop_started____d749;
    tUWide DEF_e2mw___d751;
    tUInt8 DEF_upd__h10683;
    tUInt8 DEF_upd__h12693;
    tUInt8 DEF_upd__h12751;
    tUInt8 DEF_statRedirect_deqP_dummy2_1__h10801;
    tUInt8 DEF_statRedirect_deqP_dummy2__h10788;
    tUInt8 DEF_statRedirect_enqP_dummy2_1__h12719;
    tUInt8 DEF_statRedirect_enqP_dummy2__h10609;
    tUInt8 DEF_e2mw_82_BIT_278___d763;
    tUInt8 DEF_e2mw_82_BIT_272___d764;
    tUInt8 DEF_y__h10834;
    tUInt8 DEF_x__h10833;
    tUInt8 DEF_IF_statRedirect_enqP_lat_whas__0_THEN_statRedi_ETC___d720;
   
   /* Local definitions */
   private:
    tUInt32 DEF_pc__h5651;
    tUInt8 DEF_statRedirect_data_rl__h1625;
    tUWide DEF_e2mw_82_BITS_134_TO_66___d653;
    tUInt32 DEF_e2mw_82_BITS_265_TO_234___d738;
    tUInt32 DEF_e2mw_82_BITS_166_TO_135___d812;
    tUInt32 DEF_e2mw_82_BITS_64_TO_33___d811;
    tUInt8 DEF_e2mw_82_BITS_277_TO_273___d736;
    tUInt8 DEF_e2mw_82_BIT_266___d765;
    tUInt8 DEF_e2mw_82_BIT_167___d767;
    tUInt8 DEF_e2mw_82_BIT_65___d769;
    tUInt32 DEF_IF_e2mw_82_BIT_266_38_THEN_e2mw_82_BITS_265_TO_ETC___d727;
    tUInt8 DEF_IF_statRedirect_data_lat_whas_THEN_statRedirec_ETC___d810;
    tUWide DEF_e2mw_82_BITS_282_TO_279_83_CONCAT_e2mw_82_BIT__ETC___d671;
    tUInt8 DEF_e2mw_82_BIT_278_31_CONCAT_IF_e2mw_82_BIT_278_3_ETC___d735;
    tUWide DEF_e2mw_82_BIT_272_35_CONCAT_IF_e2mw_82_BIT_272_3_ETC___d670;
    tUWide DEF_IF_f2e_51_BITS_47_TO_44_52_EQ_0b0_53_OR_f2e_51_ETC___d566;
    tUWide DEF_IF_f2e_51_BITS_47_TO_44_52_EQ_0b0_53_OR_f2e_51_ETC___d565;
    tUWide DEF_NOT_f2e_51_BITS_47_TO_44_52_EQ_0b0_53_93_AND_N_ETC___d564;
    tUWide DEF_e2mw_82_BIT_233_03_CONCAT_IF_e2mw_82_BIT_233_0_ETC___d669;
    tUWide DEF_e2mw_82_BITS_282_TO_279_83_EQ_4_84_OR_e2mw_82__ETC___d668;
    tUWide DEF_DONTCARE_CONCAT_IF_f2e_51_BITS_47_TO_44_52_EQ__ETC___d563;
    tUWide DEF_IF_IF_f2e_51_BITS_47_TO_44_52_EQ_0b0_53_OR_f2e_ETC___d562;
    tUWide DEF_IF_e2mw_82_BITS_282_TO_279_83_EQ_4_84_OR_e2mw__ETC___d667;
    tUWide DEF_IF_IF_f2e_51_BITS_47_TO_44_52_EQ_0b0_53_OR_f2e_ETC___d561;
    tUWide DEF_IF_IF_f2e_51_BITS_47_TO_44_52_EQ_0b0_53_OR_f2e_ETC___d560;
    tUWide DEF_NOT_e2mw_82_BITS_282_TO_279_83_EQ_4_84_95_AND__ETC___d615;
   
   /* Rules */
   public:
    void RL_statRedirect_data_canon();
    void RL_statRedirect_enqP_canon();
    void RL_statRedirect_deqP_canon();
    void RL_doFetch();
    void RL_doRest();
    void RL_doMemory();
    void RL_doWriteBack();
    void RL_upd_Stat();
    void RL_statHLT();
    void RL_statINS();
   
   /* Methods */
   public:
    tUWide METH_cpuToHost();
    tUInt8 METH_RDY_cpuToHost();
    void METH_hostToCpu(tUInt32 ARG_hostToCpu_startpc);
    tUInt8 METH_RDY_hostToCpu();
   
   /* Reset routines */
   public:
    void reset_RST_N(tUInt8 ARG_rst_in);
   
   /* Static handles to reset routines */
   public:
   
   /* Pointers to reset fns in parent module for asserting output resets */
   private:
   
   /* Functions for the parent module to register its reset fns */
   public:
   
   /* Functions to set the elaborated clock id */
   public:
    void set_clk_0(char const *s);
   
   /* State dumping routine */
   public:
    void dump_state(unsigned int indent);
   
   /* VCD dumping routines */
   public:
    unsigned int dump_VCD_defs(unsigned int levels);
    void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkProc &backing);
    void vcd_defs(tVCDDumpType dt, MOD_mkProc &backing);
    void vcd_prims(tVCDDumpType dt, MOD_mkProc &backing);
    void vcd_submodules(tVCDDumpType dt, unsigned int levels, MOD_mkProc &backing);
  };
}

#endif /* ifndef __mkProc_h__ */
